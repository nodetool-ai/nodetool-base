# This file is auto-generated by nodetool.dsl.codegen.
# Please do not edit this file manually.

# Instead, edit the node class in the source module and run the following commands to regenerate the DSL:
# nodetool package scan
# nodetool codegen

from pydantic import BaseModel, Field
import typing
from typing import Any
import nodetool.metadata.types
import nodetool.metadata.types as types
from nodetool.dsl.graph import GraphNode, SingleOutputGraphNode

import typing
from pydantic import Field
from nodetool.dsl.handles import OutputHandle, OutputsProxy, connect_field
import nodetool.nodes.lib.markitdown
from nodetool.workflows.base_node import BaseNode


class ConvertToMarkdown(
    SingleOutputGraphNode[types.DocumentRef], GraphNode[types.DocumentRef]
):
    """
    Converts various document formats to markdown using MarkItDown.
    markdown, convert, document

    Use cases:
    - Convert Word documents to markdown
    - Convert Excel files to markdown tables
    - Convert PowerPoint to markdown content
    """

    document: types.DocumentRef | OutputHandle[types.DocumentRef] = connect_field(
        default=types.DocumentRef(type="document", uri="", asset_id=None, data=None),
        description="The document to convert to markdown",
    )

    @classmethod
    def get_node_class(cls) -> type[BaseNode]:
        return nodetool.nodes.lib.markitdown.ConvertToMarkdown

    @classmethod
    def get_node_type(cls):
        return cls.get_node_class().get_node_type()
